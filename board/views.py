from django.contrib.auth.models import User
from rest_framework import  permissions, viewsets
from board.permissions import IsOwnerOrReadOnly
from board.models import Thread, Message
from board.serializers import UserSerializer, ThreadSerializer, MessageSerializer

#Views for Messages.Using viewsets for autogenerating detail and list views.
class MessageViewSet(viewsets.ModelViewSet):
    """
    Messages reprent a post to a thread by a particular user.

    Message:
        +id: int automatically generated by system
        +title: string title of the message
        +body_text: string contents of the post
        +owner: string automatically generated based on user login
        +thread: hyperlink related thread to which the message belongs

    Available actions for Messages: `list`, `create`, `retrieve`,
    `update` and `destroy`

    """
    queryset = Message.objects.all()
    serializer_class = MessageSerializer
    permission_classes = (permissions.IsAuthenticatedOrReadOnly,
                          IsOwnerOrReadOnly,)

    def perform_create(self, serializer):
        serializer.save(owner=self.request.user)

#Views for Threads
class ThreadViewSet(viewsets.ModelViewSet):
    """
    Threads represent a line of discussion in the message board organized
    around a particular topic.

    Thread:
        +id: int automatically generated by system
        +title: string
        +owner: string automatically generated based on user login
        +messages: collection of hyperlink related messages

    Available actions for Threads: `list`, `create`, `retrieve`,
    `update` and `destroy`

    """
    queryset = Thread.objects.all()
    serializer_class = ThreadSerializer
    permission_classes = (permissions.IsAuthenticatedOrReadOnly,
                          IsOwnerOrReadOnly,)

    def perform_create(self, serializer):
        serializer.save(owner=self.request.user)

#Views for Users
class UserViewSet(viewsets.ReadOnlyModelViewSet):
    """
    Users are people authorized to modify the message board.

    User:
        +id: int automatically generated by system
        +username: string
        +threads: collection of hyperlink related threads
        +messages: collection of hyperlink related messages

    Available actions for Messages: `list` and 'detail'
    """
    queryset = User.objects.all()
    serializer_class = UserSerializer
